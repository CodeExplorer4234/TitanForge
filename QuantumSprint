def func1(arg1, arg2):
    var3 = func4()
    var4 = func7()
    if arg2 < var3:
        var9 = class8()
    else:
        var9 = class10()
    for var10 in range(49):
        var11 = var9.func9
        var11(arg2, var10)
    var12 = -805 ^ var4
    var13 = 755 + var4 & arg2 ^ var4
    var14 = -424025543 & -709 ^ var13 ^ -1309792614
    var15 = var3 + var13
    var16 = arg1 + arg1 | var13 | var13
    var17 = arg1 & (var14 - var13)
    var18 = var16 & var12 | 254699481 - var13
    var19 = (var12 & var13 | var17) | var12
    var20 = (var16 & (var18 | arg2)) | var3
    var21 = -362 - var17
    var22 = var15 | (var16 ^ var13)
    result = (var3 + var3) + (var13 - var13 - (var15 + var19))
    return result
class class10(object):
    def func9(self, arg7, arg8):
        result = -666842114 ^ -1208279125
        return result
class class8(object):
    def func9(self, arg5, arg6):
        result = 92308093 | 0
        return result
def func7():
    func5()
    result = len(range(23))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : -3
def func4():
    func2()
    result = len([(-9 | 3) | 3 for i in [i + (i + 2) for i in xrange(20)]])
    func3()
    return result
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : -5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 23'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
